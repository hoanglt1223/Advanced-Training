direction: right

hoang: Hoang {
  shape: person
}

device: My device {
  style: {
    stroke-dash: 3
  }
  nodeP: Producer Node {
    shape: image
    icon: https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_f0b606abb6d19089febc9faeeba5bc05/nodejs-development-services.png
  }

  nodeC: Consumer Node {
    shape: image
    icon: https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_f0b606abb6d19089febc9faeeba5bc05/nodejs-development-services.png
  }
}

DO: DigitalOcean Droplet {
  style: {
    fill: "#f0f0f0"
  }
  icon: https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/DigitalOcean_logo.svg/1200px-DigitalOcean_logo.svg.png
  network: Docker Container network {
    style: {
      stroke-dash: 3
    }
    nginx: Nginx Proxy Manager {
      shape: image
      icon: https://repository-images.githubusercontent.com/114938943/98879880-6796-11ea-8a07-a3f907697ec6
    }
    kafka: Kafka {
      shape: image
      icon: https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRi9Pv11C7aRTytLXz1-L5NWQE4oMIGA7U-yg&usqp=CAU
    }
    kui: Kafka-UI {
      shape: image
      icon: https://img.stackshare.io/service/21789/default_49a504fbaa35a1b07b8f44abb9b90b8996f6068d.png
    }
    zookeeper: Zookeeper {
      shape: image
      icon: https://avatars.githubusercontent.com/u/42516662?v=4&s=160
    }
  }
  docker: Docker {
    shape: image
    icon: https://techvccloud.mediacdn.vn/2018/7/13/docker-1531468887078532266614-0-14-400-726-crop-15314688919081778546108.png
  }
  dockerCompose: Docker Compose {
    shape: image
    icon: https://www.seekpng.com/png/detail/525-5256723_docker-compose-logo.png
  }
  publicKey: Public SSH Key {
    shape: image
    icon: https://www.seekpng.com/png/detail/620-6208197_png-file-svg-public-key-icon.png
  }
}

registry: Docker Registry {
  shape: image
  icon: https://i.octopus.com/blog/2021-07/custom-docker-registry/blogimage-create-a-custom-docker-registry-2021.png
}

git: Git through Github {
  icon: https://play-lh.googleusercontent.com/PCpXdqvUWfCW1mXhH1Y_98yBpgsWxuTSTofy3NGMo9yBTATDyzVkqU580bfSln50bFU

  repo: My Repository {
    icon: https://w7.pngwing.com/pngs/6/157/png-transparent-branching-github-computer-icons-fork-fork-code-git-repository.png

    terraform: Terraform Config {
      icon: https://avatars.githubusercontent.com/u/65281416?s=280&v=4
    }
  }
}

terraform: Terraform {
  icon: https://avatars.githubusercontent.com/u/65281416?s=280&v=4

  key: My private-key
  token: DigitalOcean token
}

device.nodeC -> DO.network.nginx: access kafka through DO.nginx
device.nodeP -> DO.network.nginx: access kafka through DO.nginx
DO.network.nginx -> DO.network.kafka
DO.network.nginx -> DO.network.kui
DO.network.kui -> DO.network.kafka
DO.network.zookeeper <-> DO.network.kafka
DO.dockerCompose -> DO.docker
DO.docker -> registry
DO.dockerCompose -> registry
DO.docker -> DO.network: create containers using Compose
hoang -> DO.network.nginx: access kafka-ui through Nginx
terraform -> git.repo: Access through git provider - Github
terraform -> DO: create resouce base on config using DO API and DO Token
git.repo -> terraform: Trigger plan when push
